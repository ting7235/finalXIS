openapi: 3.0.0
info:
  title: Dog Charity API
  version: 1.0.0
  description: API for managing dog charity activities.
servers:
  - url: http://localhost:3000
paths:
  /register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                role:
                  type: string
      responses:
        '200':
          description: User registered successfully
        '500':
          description: Error occurred

  /login:
    post:
      summary: User login
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        '200':
          description: Login successful
        '400':
          description: Invalid email or password
        '500':
          description: Error occurred

  /dogs/{id}:
    get:
      summary: Get dog details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dog details
        '404':
          description: Dog not found
        '500':
          description: Error occurred

  /dogs:
    post:
      summary: Add a new dog
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                breed:
                  type: string
                age:
                  type: integer
                description:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Dog added successfully
        '500':
          description: Error occurred

  /dogs/{id}:
    put:
      summary: Update dog details
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                name:
                  type: string
                breed:
                  type: string
                age:
                  type: integer
                description:
                  type: string
                image:
                  type: string
                  format: binary
      responses:
        '200':
          description: Dog updated successfully
        '500':
          description: Error occurred

  /dogs/{id}:
    delete:
      summary: Delete a dog
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Dog deleted successfully
        '500':
          description: Error occurred

  /messages:
    post:
      summary: Send a message
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                dogId:
                  type: integer
                message:
                  type: string
      responses:
        '200':
          description: Message sent successfully
        '500':
          description: Error occurred

  /messages:
    get:
      summary: Get all messages
      responses:
        '200':
          description: List of messages
        '500':
          description: Error occurred

  /messages/{id}:
    get:
      summary: Get a specific message
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Message details
        '404':
          description: Message not found
        '500':
          description: Error occurred

  /messages/{id}:
    put:
      summary: Send a response to a message
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                response:
                  type: string
      responses:
        '200':
          description: Response sent successfully
        '500':
          description: Error occurred

  /messages/{id}:
    delete:
      summary: Delete a message
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Message deleted successfully
        '500':
          description: Error occurred

  /favorites/details/{userId}:
    get:
      summary: Get favorite dogs details
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of favorite dogs
        '500':
          description: Error occurred

  /favorites:
    post:
      summary: Add a dog to favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                dogId:
                  type: integer
      responses:
        '200':
          description: Dog added to favorites
        '400':
          description: userId and dogId are required
        '500':
          description: Error occurred

  /user/messages/{userId}:
    get:
      summary: Get user messages
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of messages
        '500':
          description: Error occurred

  /favorites/{userId}:
    get:
      summary: Get user favorites
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of favorite dogs
        '400':
          description: userId is required
        '500':
          description: Error occurred

  /favorites:
    delete:
      summary: Remove a dog from favorites
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: integer
                dogId:
                  type: integer
      responses:
        '200':
          description: Dog removed from favorites
        '400':
          description: userId and dogId are required
        '500':
          description: Error occurred
